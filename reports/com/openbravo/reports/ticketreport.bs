report = new com.openbravo.pos.reports.PanelReportBean();

report.setTitleKey("Menu.TicketReport");
report.setReport("/com/openbravo/reports/ticketreport");
report.setResourceBundle("com/openbravo/reports/ticketreport_messages");

report.setSentence("SELECT " +
                "TICKETS.TICKETID AS TICKET_NO, " +
                "RECEIPTS.DATENEW AS TICKET_DATE, " +
				"PAYMENTS.TOTAL AS MONEY, " +
				"PEOPLE.NAME AS USER, " +
				"PAYMENTS.PAYMENT AS PAYMENT " +
                "FROM RECEIPTS " +
                "LEFT JOIN TICKETS ON RECEIPTS.ID = TICKETS.ID " +
				"LEFT JOIN PAYMENTS ON RECEIPTS.ID = PAYMENTS.RECEIPT " +
				"LEFT JOIN PEOPLE ON TICKETS.PERSON = PEOPLE.ID " +
                "WHERE ?(QBF_FILTER) " +
                "ORDER BY PEOPLE.NAME, RECEIPTS.DATENEW");
report.addParameter("RECEIPTS.DATENEW");
report.addParameter("RECEIPTS.DATENEW");
report.addQBFFilter(new com.openbravo.pos.reports.JParamsDatesInterval());
report.addParameter("PEOPLE.ID");
report.addQBFFilter(new com.openbravo.pos.reports.JParamsUsersWithFirst());

report.addField("TICKET_NO", com.openbravo.data.loader.Datas.STRING);
report.addField("TICKET_DATE", com.openbravo.data.loader.Datas.TIMESTAMP);
report.addField("MONEY", com.openbravo.data.loader.Datas.DOUBLE);
report.addField("USER", com.openbravo.data.loader.Datas.STRING);
report.addField("PAYMENT", com.openbravo.data.loader.Datas.STRING);

return report;
